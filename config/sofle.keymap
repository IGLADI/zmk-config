/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define GAMING 3

&mt { tapping-term-ms = <200>; };

/ {
    // add 2ns nkp (non-overlap key press)

    behaviors {
        nkp2: non_overlap_key_press_2 {
            compatible = "zmk,behavior-non-overlap";
            #binding-cells = <1>;
            bindings = <&kp>;
        };

        lt2: layer_tap_2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        adot: adot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN>, <&kp LS(M)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acomma: acomma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp N7>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acolon: acolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        aquote: aquote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp N2>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot: dot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comma: comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&qwertyegrave>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        colon: colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMICOLON>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        quote: quote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp RA(E)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        one: one {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_1)>, <&kp NUMBER_1>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        two: two {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_2)>, <&kp NUMBER_2>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        three: three {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_3)>, <&kp NUMBER_3>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        four: four {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_4)>, <&kp NUMBER_4>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        five: five {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_5)>, <&kp NUMBER_5>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        six: six {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_6)>, <&kp NUMBER_6>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        seven: seven {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_7)>, <&kp NUMBER_7>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        eight: eight {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_8)>, <&kp NUMBER_8>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        nine: nine {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_9)>, <&kp NUMBER_9>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };

        zero: zero {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_0)>, <&kp NUMBER_0>;

            keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        nav {
            timeout-ms = <100>;
            bindings = <&mo 4>;
            key-positions = <56 53>;
        };
    };

    macros {
        qwertyegrave: qwertyegrave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp E>;
            label = "QWERTYEGRAVE";
        };

        directory_back: directory_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp FSLH>;
            label = "DIRECTORY_BACK";
        };

        adirectory_back: adirectory_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp LT &kp LS(DOT)>;
            label = "ADIRECTORY_BACK";
        };

        atilde: atilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(SLASH) &kp SPACE>;
            label = "ATILDE";
        };

        agrave: agrave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(BACKSLASH) &kp SPACE>;
            label = "AGRAVE";
        };

        qwertyc: qwertyc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(COMMA) &kp C>;
            label = "QWERTYC";
        };

        qwertya: qwertya {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp A>;
            label = "QWERTYA";
        };

        qtilde: qtilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &kp SPACE>;
            label = "QTILDE";
        };

        qgrave: qgrave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp SPACE>;
            label = "QGRAVE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        azerty_colemak {
            display-name = "A=>col";
            bindings = <
&kp ESCAPE      &kp NUMBER_1  &kp N2  &kp N3          &kp N4           &kp N5                                        &kp N6                &kp N7     &kp N8     &kp N9   &kp N0   &kp ESCAPE
&kp LEFT_SHIFT  &kp A         &kp Z   &kp F           &kp P            &kp B                                         &kp J                 &kp L      &kp U      &kp Y    &aquote  &kp LEFT_ALT
&kp BACKSPACE   &kp Q         &kp R   &kp S           &kp T            &kp G                                         &kp SEMICOLON         &kp N      &kp E      &kp I    &kp O    &kp DELETE
&kp LCTRL       &kp W         &kp X   &kp C           &kp D            &kp V            &kp C_MUTE    &kp LG(LS(Q))  &kp K                 &kp H      &adot      &acomma  &acolon  &kp LCTRL
                              &tog 5  &kp LEFT_SHIFT  &mt LALT ESCAPE  &mt LCTRL ENTER  &kp LGUI      &lt 7 LS(TAB)  &mt LEFT_SHIFT SPACE  &lt 2 TAB  &kp LCTRL  &to 1
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        qwerty_colemak {
            display-name = "Q=>col";
            bindings = <
&trans  &trans  &trans  &trans          &trans           &trans                                      &trans                &trans     &trans     &trans  &trans  &trans
&trans  &kp Q   &kp W   &kp F           &kp P            &kp B                                       &kp J                 &kp L      &kp U      &kp Y   &quote  &trans
&trans  &kp A   &kp R   &kp S           &kp T            &kp G                                       &kp M                 &kp N      &kp E      &kp I   &kp O   &trans
&trans  &kp Z   &kp X   &kp C           &kp D            &kp V            &trans      &trans         &kp K                 &kp H      &dot       &comma  &colon  &trans
                &tog 5  &kp LEFT_SHIFT  &mt LALT ESCAPE  &mt LCTRL ENTER  &kp LGUI    &lt 8 LS(TAB)  &mt LEFT_SHIFT SPACE  &lt 3 TAB  &kp LCTRL  &to 0
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        Asymbols {
            display-name = "symbols";
            bindings = <
&trans  &trans                &trans               &trans               &trans                    &trans                              &trans             &trans         &trans                &trans                 &trans            &trans
&trans  &kp NON_US_BACKSLASH  &kp LS(NON_US_BSLH)  &kp LS(RIGHT_BRACE)  &kp LEFT_BRACKET          &kp RA(NUMBER_1)                    &kp RA(N3)         &kp LS(EQUAL)  &kp RA(NUMBER_9)      &kp RA(NUMBER_0)       &kp RA(NUMBER_2)  &trans
&trans  &kp NUMBER_8          &kp LS(SLASH)        &kp EQUAL            &kp SLASH                 &kp NUMBER_1                        &kp RIGHT_BRACKET  &kp NUMBER_3   &kp N5                &kp MINUS              &atilde           &trans
&trans  &adirectory_back      &kp LS(APOSTROPHE)   &kp LS(DOT)          &kp RA(NON_US_BACKSLASH)  &kp NUMBER_9      &trans    &trans  &kp N0             &agrave        &kp RA(LEFT_BRACKET)  &kp RA(RIGHT_BRACKET)  &kp COMMA         &trans
                              &trans               &trans               &trans                    &trans            &trans    &trans  &trans             &trans         &trans                &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        Qsymbols {
            display-name = "symbols";
            bindings = <
&trans  &trans           &trans            &trans        &trans                &trans                      &trans      &trans             &trans                &trans                 &trans       &trans
&trans  &kp LESS_THAN    &kp GREATER_THAN  &kp ASTERISK  &kp CARET             &kp PIPE                    &kp HASH    &kp UNDERSCORE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT_SIGN  &trans
&trans  &kp EXCLAMATION  &kp PLUS          &kp MINUS     &kp EQUAL             &kp AMPS                    &kp DOLLAR  &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &qtilde      &trans
&trans  &directory_back  &kp PERCENT       &kp SLASH     &kp NON_US_BACKSLASH  &qwertyc  &trans    &trans  &qwertya    &qgrave            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SEMI     &trans
                         &trans            &trans        &trans                &trans    &trans    &trans  &trans      &trans             &trans                &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        navigation {
            display-name = "nav";
            bindings = <
&trans  &trans   &trans          &trans          &trans           &trans                           &trans  &trans          &trans     &trans    &trans    &trans
&trans  &trans   &kp HOME        &kp UP_ARROW    &kp END          &kp LC(PG_DN)                    &trans  &trans          &trans     &trans    &trans    &trans
&trans  &kp TAB  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(PG_UP)                    &trans  &kp LEFT_SHIFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &trans   &trans          &trans          &trans           &trans         &trans    &trans  &trans  &trans          &trans     &trans    &trans    &trans
                 &trans          &trans          &trans           &trans         &trans    &trans  &trans  &trans          &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        gaming {
            display-name = "game";
            bindings = <
&trans  &trans          &trans  &trans  &trans  &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&kp T   &kp TAB         &kp Q   &kp W   &kp E   &kp R                           &trans  &kp Y   &kp U   &kp I   &kp O   &kp P
&kp G   &kp LEFT_SHIFT  &kp A   &kp S   &kp D   &kp F                           &trans  &kp H   &kp J   &kp K   &kp L   &trans
&kp B   &kp LCTRL       &kp Z   &kp X   &kp C   &kp V      &trans       &trans  &trans  &kp N   &kp M   &trans  &trans  &trans
                        &trans  &to 6   &mo 8   &kp LCTRL  &kp SPACE    &trans  &trans  &trans  &trans  &to 6
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        gaming_qwerty {
            display-name = "Qgame";
            bindings = <
&trans  &trans          &trans  &trans  &trans  &trans                          &trans  &trans  &trans     &trans  &trans  &trans
&kp T   &kp TAB         &kp A   &kp Z   &kp E   &kp R                           &trans  &kp Y   &kp U      &kp I   &kp O   &kp P
&kp G   &kp LEFT_SHIFT  &kp Q   &kp S   &kp D   &kp F                           &trans  &kp H   &kp J      &kp K   &kp L   &trans
&kp B   &kp LCTRL       &kp W   &kp X   &kp C   &kp V      &trans       &trans  &trans  &kp N   &kp COMMA  &trans  &trans  &trans
                        &to 0   &to 5   &mo 8   &kp LCTRL  &kp SPACE    &trans  &trans  &trans  &trans     &to 5
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;

            label = "gaming";
        };

        Anumber_fn {
            display-name = "numbers";
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans        &trans  &trans  &trans        &trans
&kp F12     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &kp F6  &kp F7        &kp F8  &kp F9  &kp F10       &kp F11
&trans      &one          &two          &three        &four         &five                           &six    &seven        &eight  &nine   &zero         &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &trans  &out OUT_USB  &trans  &trans  &out OUT_BLE  &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans        &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        Qnumbers_fn {
            display-name = "numbers";
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans        &trans  &trans  &trans        &trans
&kp F12     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &kp F6  &kp F7        &kp F8  &kp F9  &kp F10       &kp F11
&trans      &kp NUMBER_1  &kp N2        &kp N3        &kp N4        &kp N5                          &kp N6  &kp N7        &kp N8  &kp N9  &kp N0        &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &trans  &out OUT_USB  &trans  &trans  &out OUT_BLE  &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans        &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};
